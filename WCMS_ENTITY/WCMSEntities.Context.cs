//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCMS_ENTITY
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WCMSEntities : DbContext
    {
        public WCMSEntities()
            : base("name=WCMSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblMainMenu> tblMainMenu { get; set; }
        public virtual DbSet<tblSubMenu> tblSubMenu { get; set; }
        public virtual DbSet<AssemblyAttendance> AssemblyAttendance { get; set; }
        public virtual DbSet<tblProductionLine> tblProductionLine { get; set; }
        public virtual DbSet<tblSolderingOthers> tblSolderingOthers { get; set; }
        public virtual DbSet<tblComponentRequisition> tblComponentRequisition { get; set; }
        public virtual DbSet<tblAssemblyLineSetup> tblAssemblyLineSetup { get; set; }
        public virtual DbSet<tblTimeRange> tblTimeRange { get; set; }
        public virtual DbSet<OQcBatchInfo> OQcBatchInfo { get; set; }
        public virtual DbSet<tblAssemblyLineSetupDetails> tblAssemblyLineSetupDetails { get; set; }
        public virtual DbSet<Issues> Issues { get; set; }
        public virtual DbSet<BomList> BomList { get; set; }
        public virtual DbSet<EmpAttendences> EmpAttendences { get; set; }
        public virtual DbSet<tblLogin> tblLogin { get; set; }
        public virtual DbSet<tblRoles> tblRoles { get; set; }
        public virtual DbSet<ProjectBomList> ProjectBomList { get; set; }
        public virtual DbSet<tblDailyIssuedComponents> tblDailyIssuedComponents { get; set; }
        public virtual DbSet<EmployeeInfo> EmployeeInfo { get; set; }
        public virtual DbSet<tblDailyPacking> tblDailyPacking { get; set; }
        public virtual DbSet<tblLineStatus> tblLineStatus { get; set; }
        public virtual DbSet<ProductionMaster> ProductionMaster { get; set; }
        public virtual DbSet<tblPackagingBatch> tblPackagingBatch { get; set; }
        public virtual DbSet<tblDeletdPackagingBatchData> tblDeletdPackagingBatchData { get; set; }
        public virtual DbSet<tblIMEIRecord> tblIMEIRecord { get; set; }
        public virtual DbSet<tblRework> tblRework { get; set; }
        public virtual DbSet<tblLogistics> tblLogistics { get; set; }
        public virtual DbSet<tblScrew> tblScrew { get; set; }
        public virtual DbSet<tblWarehouse> tblWarehouse { get; set; }
        public virtual DbSet<tblLogisticsSentItems> tblLogisticsSentItems { get; set; }
        public virtual DbSet<TestIMEIUploadForUpdate> TestIMEIUploadForUpdate { get; set; }
        public virtual DbSet<tblGlueMaster> tblGlueMaster { get; set; }
        public virtual DbSet<tblLcdGlueIssuesList> tblLcdGlueIssuesList { get; set; }
        public virtual DbSet<tblTpLcdMaster> tblTpLcdMaster { get; set; }
        public virtual DbSet<tblLcdGlueWorkingModels> tblLcdGlueWorkingModels { get; set; }
        public virtual DbSet<tblLcdGlueRework> tblLcdGlueRework { get; set; }
        public virtual DbSet<tblBarCodeInv> tblBarCodeInv { get; set; }
        public virtual DbSet<tblRepairStatus> tblRepairStatus { get; set; }
        public virtual DbSet<tblColors> tblColors { get; set; }
        public virtual DbSet<tblRepairComponents> tblRepairComponents { get; set; }
        public virtual DbSet<tblBtteryScanner> tblBtteryScanner { get; set; }
        public virtual DbSet<tblCkdMmiMaster> tblCkdMmiMaster { get; set; }
        public virtual DbSet<tblCkdRework> tblCkdRework { get; set; }
        public virtual DbSet<tblCkdRfMaster> tblCkdRfMaster { get; set; }
        public virtual DbSet<tblCkdSmtMaster> tblCkdSmtMaster { get; set; }
        public virtual DbSet<tblCkdSoftwareLoadMaster> tblCkdSoftwareLoadMaster { get; set; }
        public virtual DbSet<tblBatteryComponentInfo> tblBatteryComponentInfo { get; set; }
        public virtual DbSet<tblOqcCheckedItems> tblOqcCheckedItems { get; set; }
        public virtual DbSet<AgingBatch> AgingBatch { get; set; }
        public virtual DbSet<AgingBatchInfo> AgingBatchInfo { get; set; }
        public virtual DbSet<tblAgingMaster> tblAgingMaster { get; set; }
        public virtual DbSet<tblChargerMaster> tblChargerMaster { get; set; }
        public virtual DbSet<tblCkdIssues> tblCkdIssues { get; set; }
    
        public virtual ObjectResult<SPGetProductCount_Result> SPGetProductCount(Nullable<long> projectId, string date)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("projectId", projectId) :
                new ObjectParameter("projectId", typeof(long));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetProductCount_Result>("SPGetProductCount", projectIdParameter, dateParameter);
        }
    
        public virtual ObjectResult<SpHourlyTargetEfficiency_Result> SpHourlyTargetEfficiency(Nullable<long> projectId, Nullable<long> lineId, string date)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("projectId", projectId) :
                new ObjectParameter("projectId", typeof(long));
    
            var lineIdParameter = lineId.HasValue ?
                new ObjectParameter("lineId", lineId) :
                new ObjectParameter("lineId", typeof(long));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpHourlyTargetEfficiency_Result>("SpHourlyTargetEfficiency", projectIdParameter, lineIdParameter, dateParameter);
        }
    
        public virtual ObjectResult<SPOQcStatus_Result> SPOQcStatus(Nullable<long> projectId, string date)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("projectId", projectId) :
                new ObjectParameter("projectId", typeof(long));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPOQcStatus_Result>("SPOQcStatus", projectIdParameter, dateParameter);
        }
    
        public virtual ObjectResult<SpLineWiseHourlyTargetEfficiency_Result> SpLineWiseHourlyTargetEfficiency(string date)
        {
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpLineWiseHourlyTargetEfficiency_Result>("SpLineWiseHourlyTargetEfficiency", dateParameter);
        }
    
        public virtual ObjectResult<SpLineWiseStationsHourlyStatus_Result> SpLineWiseStationsHourlyStatus(string date)
        {
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpLineWiseStationsHourlyStatus_Result>("SpLineWiseStationsHourlyStatus", dateParameter);
        }
    
        public virtual ObjectResult<SpProductionLineCount_Result> SpProductionLineCount(string date)
        {
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpProductionLineCount_Result>("SpProductionLineCount", dateParameter);
        }
    
        public virtual ObjectResult<SpPackagingLineCount_Result> SpPackagingLineCount(string date)
        {
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpPackagingLineCount_Result>("SpPackagingLineCount", dateParameter);
        }
    
        public virtual ObjectResult<Testo_Result> Testo(string date)
        {
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Testo_Result>("Testo", dateParameter);
        }
    
        public virtual ObjectResult<MyLogisticsTest_Result> MyLogisticsTest(string date, string model)
        {
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("model", model) :
                new ObjectParameter("model", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MyLogisticsTest_Result>("MyLogisticsTest", dateParameter, modelParameter);
        }
    
        public virtual ObjectResult<SpPackagingLineCount1_Result> SpPackagingLineCount1(string date)
        {
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpPackagingLineCount1_Result>("SpPackagingLineCount1", dateParameter);
        }
    
        public virtual ObjectResult<SpTpLcdReport_Result> SpTpLcdReport(string dateFrom, string dateTo, string project)
        {
            var dateFromParameter = dateFrom != null ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(string));
    
            var dateToParameter = dateTo != null ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(string));
    
            var projectParameter = project != null ?
                new ObjectParameter("project", project) :
                new ObjectParameter("project", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpTpLcdReport_Result>("SpTpLcdReport", dateFromParameter, dateToParameter, projectParameter);
        }
    
        public virtual ObjectResult<SpGlueStationReport_Result> SpGlueStationReport(string dateFrom, string dateTo, string project)
        {
            var dateFromParameter = dateFrom != null ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(string));
    
            var dateToParameter = dateTo != null ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(string));
    
            var projectParameter = project != null ?
                new ObjectParameter("project", project) :
                new ObjectParameter("project", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGlueStationReport_Result>("SpGlueStationReport", dateFromParameter, dateToParameter, projectParameter);
        }
    
        public virtual ObjectResult<SPLineWiseReport_Result> SPLineWiseReport(Nullable<long> lineId, string date)
        {
            var lineIdParameter = lineId.HasValue ?
                new ObjectParameter("LineId", lineId) :
                new ObjectParameter("LineId", typeof(long));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPLineWiseReport_Result>("SPLineWiseReport", lineIdParameter, dateParameter);
        }
    
        public virtual ObjectResult<SpTp_LcdReport_Result> SpTp_LcdReport(Nullable<long> projectId, string fromDate, string toDate)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("projectId", projectId) :
                new ObjectParameter("projectId", typeof(long));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpTp_LcdReport_Result>("SpTp_LcdReport", projectIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SPAssemblylineProductionStatus_Result> SPAssemblylineProductionStatus(Nullable<long> projectId, string fromdate, string todate)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("projectId", projectId) :
                new ObjectParameter("projectId", typeof(long));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPAssemblylineProductionStatus_Result>("SPAssemblylineProductionStatus", projectIdParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<SpDailyProductionFault_Result> SpDailyProductionFault(Nullable<long> projectId, string date)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("projectId", projectId) :
                new ObjectParameter("projectId", typeof(long));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpDailyProductionFault_Result>("SpDailyProductionFault", projectIdParameter, dateParameter);
        }
    
        public virtual int SPLineWiseIssueCount(string date, Nullable<long> projectId)
        {
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("projectId", projectId) :
                new ObjectParameter("projectId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPLineWiseIssueCount", dateParameter, projectIdParameter);
        }
    }
}
